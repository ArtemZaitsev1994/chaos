version: '3.7'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn chaos.wsgi:application --bind 0.0.0.0:8000
    volumes:
    - static_volume:/home/app/web/static
    - media_volume:/home/app/web/media
    expose:
    - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
  db:
    image: postgres:12-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    env_file:
      - ./.env.dev
  redis:
    image: redis:alpine
    env_file:
      - ./.env.dev
  celery:
    build: ./app
    command: celery -A chaos worker -l INFO
    volumes:
    - ./app/:/home/app/web
    depends_on:
      - redis
    env_file:
      - ./.env.prod
  celery-beat:
    build: ./app
    command: celery -A chaos beat -l INFO
    volumes:
      - ./app/:/home/app/web
    depends_on:
      - redis
    env_file:
      - ./.env.prod
  nginx:
    build: ./nginx
    volumes:
    - static_volume:/home/app/web/static
    - media_volume:/home/app/web/media
    ports:
    - 1337:80
    depends_on:
      - web
volumes:
  postgres_data:
  static_volume:
  media_volume:
